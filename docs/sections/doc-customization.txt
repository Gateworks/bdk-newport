= Board Configuration

Cavium's board-specific configuration software is set up so that code
editing is not required.  All configuration data is stored in a series
of device tree files in flash.  The encoding of device tree files follow
the Open Firmware specification.  Generic, non- Cavium specific,
information about device tree can be found at the following link:

http://www.devicetree.org/

Cavium software uses the *libfdt* opensource project for managing device
trees.  Source for *libfdt* is include with the Cavium source packages.

== Device Tree Usage

Configuration data is divided into four types of data:

* <<dts-manuf,Per Board Manufacturing Information>>
* <<dts-init,Common Board Initialization and Configuration>>
* <<dts-os,Operating System Configuration>>
* <<dts-board,Per Board Changeable Configuration>>

Each of these four data source are stored in independent device tree
files (*.dts).  The four files are merged during boot, presenting a
unified device tree for system software.

== [[dts-manuf]]Per Board Manufacturing Information

The per-board manufacturing data stores information set for the board
that never changes.  This data must be saved across software and
firmware updates and should be written before boards escape the
manufacturing organization.  This data contains:

* Board name (Examples: "CRB-2S", "CRB-1S", "EBB8800", "EBB8804", "EBB8604",
 "EBB8304", "EBB8104", "EBB8004", "SFF8104", "RBD8030", "NAS8104", "SFF8304",
 or "XPLIANT-CN83XX")
* Board revision (Examples: "EVT4", "0.3")
* Board serial number as a free format string
* MAC address and MAC address count

When a board is booted for the first time, the firmware stops at the
*"Boot Options"* menu.

----
ERROR: Invalid FDT header read from /boot
WARNING:
WARNING: ********************************************************
WARNING: * Board manufacturing information not found.  Program
WARNING: * the board manufacturing information in the Setup menu.
WARNING: ********************************************************
WARNING:
...
=================================
Boot Options
=================================
S) Enter Setup
E) Enter Diagnostics, skipping Setup
F) Select Image from Flash
X) Upload File to FatFS using Xmodem
W) Burn boot flash using Xmodem
U) Change baud rate and flow control
R) Reboot

Choice:
----

Someone in the manufacturing flow must enter the setup menu *"S) Enter
Setup"*.  After entering the setup menu, the manufacturing user will be
presented with the following menu:

----
Board manufacturing data is stored in a different location in
flash than other configuration items, so the settings in this
menu persist across software upgrades. Once set, these should
normally not be changed.

=================================
Setup - Board
=================================
B) Board Model Number (unknown)
R) Board Revision (unknown)
S) Serial Number (unknown)
M) Base MAC Address (0x20fb7000000)
N) Number of MAC Addresses (0)
W) Save Board Manufacturing Data to Flash
Q) Return to main menu

Choice:
----

At this point the manufacturing user must enter the associated information
and choose *"W) Save Board Manufacturing Data to Flash"*.  This
records the manufacturing data at a fixed location in flash (0xff0000).
Once entered, the manufacturing data will not be updated again.

=== Format of the Manufacturing Information

In normal usage, the exact encoding of the manufacturing information is
hidden.  If a board manufacturer wishes to customize their flow, the
manufacturing information device tree can be directly written to flash.
The source of the device tree needs to be compiled with *dtc* and the
binary tree written to flash at offset *0xff0000*.  Below is a
template for the device tree source.

----
    /dts-v1/;
    / {
    cavium,bdk {
        /* Board model number. This is used to determine the name of the
        configuration file containing the boards default settings. This
        parameter is stored in a static board manufacturing area at the
        top of the boot flash. */
        BOARD-MODEL = "unknown";
        /* The board revision level. This parameter is stored in a static
        board manufacturing area at the top of the boot flash. */
        BOARD-REVISION = "unknown";
        /* Unique string used as a serial number. This parameter is stored
        in a static board manufacturing area at the top of the boot flash. */
        BOARD-SERIAL = "unknown";
        /* The first MAC address assigned to the on-chip network ports. MAC
        addresses are in a contiguous block starting at this address and
        containing BOARD-MAC-ADDRESS-NUM number of addresses. The format
        of this parameter is 0xXXXXXXXXXXXX, 12 hex digits starting with
        '0x'.This parameter is stored in a static board manufacturing
        area at the top of the boot flash. */
        BOARD-MAC-ADDRESS = "0x000000000000";
        /* The number of MAC addresses assigned to the on-chip network
        ports. See BOARD-MAC-ADDRESS for the actual MAC address numeric
        value.This parameter is stored in a static board manufacturing
        area at the top of the boot flash. */
        BOARD-MAC-ADDRESS-NUM = "0";
    }; /* cavium,bdk */
    }; /* / */
----

== [[dts-init]]Common Board Initialization and Configuration

Each board requires several configuration items to ensure it works
correctly with system software.  Some significant configuration items are:

* DRAM configuration
* QLM mode and frequency
* QLM clocking
* QLM tuning
* BGX enable and disables
* BMC TWSI interface
* CCPI and multi-node settings
* GPIO configuration
* USB power settings
* Boot watchdog support
* Diagnostics parameters (EYE diagram, etc)
* MDIO/TWSI connections for PHYs
* MDIO/TWSI custom writes for the board

Since there are a large number parameters here, Cavium supplies a
number of example configurations.  Each example corresponds to a board
Cavium ships.  These examples can be used as a basis for customer boards
by copying one of the *BOARD.dts* files and using it as a base.  Once the
DTS file is ready, it is run through the device tree compiler and
loaded onto the board.

Inside the sample configuration files, you will find a list of options with comments
describing them. Following is a typical example of a configuration item:

----
    /* Determine how multi-node is supported for this system:
        0 = Multi-node is not supported
        1 = Multi-node is supported and booting requires two nodes
        2 = Multi-node is auto detected. Two nodes are used if
            if available, otherwise fall back to single node. */
    //MULTI-NODE = "2";
----

The MULTI-NODE configuration item can take the values 0, 1, and 2. Although the
default value generally allows booting, it must be set correctly for the board. For
multiboot, the default value is 2, corresponding to auto detection. In the
configuration files, the default value of a parameter appear as a // comment.

When changing the parameter, Cavium recommends doing the following:

. Copy the // line.
. Remove the //.
. Set the parameter.

Below is the recommended edit to make the board single node only.

----
    /* Determine how multi-node is supported for this system:
        0 = Multi-node is not supported
        1 = Multi-node is supported and booting requires two nodes
        2 = Multi-node is auto detected. Two nodes are used if
            if available, otherwise fall back to single node. */
    //MULTI-NODE = "2";
    MULTI-NODE = "0";
----

Some configuration items can be specified with parameters to represent
node, lane, etc.  For example, the following configuration item
specifies DRAM speed.

----
    /* Speed grade to use for DRAM in MT/s. Hardware may adjust this value
    slightly to improve DRAM stability, so scope measurements may not
    exactly match the frequency with MT/s. The Cavium supported speed
    grades are:
        666 MT/s
        800 MT/s
        1066 MT/s
        1333 MT/s
        1600 MT/s
        1866 MT/s
        2133 MT/s (DDR4 only)
    Parameters:
        N#: Parameter can be different for each node. This specifies
            which node the value is for. Node must be 0-3. Optional. */
    //DDR-SPEED.N%d = "0";
----

Note the .N%d in the configuration item name.  This represents the node
number that applies to this DRAM configuration.  If all nodes are
identical, the node parameter can be omitted.  When searching for
configuration settings, the firmware starts with the most specific
setting (most dot parameters), and progresses to the least specific
setting (no dot parameters).  The first match that is found is used.
This allows for common settings at a global level with more specific
overrides later.  The following lines are all valid DDR-SPEED settings.

----
    DDR-SPEED.N0 = "2133"; // Only applies to Node 0
    DDR-SPEED.N1 = "1866"; // Only applies to Node 1
    DDR-SPEED = "2133"; // Applies to all nodes.
----

All configuration items are listed in the
*${BDK_ROOT}/boards/generic.dts* file.  Generally it is best to start
with the Cavium board configuration file that most closely matches your
board.  Individual board files may not have all configuration items, so
referring to generic.dts can be helpful.

----
include::../../boards/generic.dts[]
----

=== DRAM Without SPDs

Some embedded designs mount DRAM directly to the board instead of using
standard DIMMs.  In these boards the *DDR-CONFIG-SPD-ADDR* fields must
be left as zero.  The DRAM configuration must be stored in
*DDR-CONFIG-SPD-DATA.DIMM%d.LMC%d.N%d* in the same binary format used in
DIMMs.  Below is an example captured from a CRB-2S with DDR4.

----
 DDR-CONFIG-SPD-DATA.DIMM0.LMC0.N0 = [
 23 10 0c 01 84 21 00 08 00 00 00 03 08 0b 80 00
 00 00 08 0c f4 1b 00 00 6c 6c 6c 11 08 74 20 08
 00 05 70 03 00 78 1e 2b 2b 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 0c 15 16 15
 0d 15 16 0b 0c 0d 03 15 16 15 0c 0c 0b 0b 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 ec b5 ce 00 00 00 00 00 c2 ae 83
 11 11 01 09 00 04 b3 01 01 65 05 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ac 13
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 80 2c 0f 15 18 0f 70 ca 6e 33 36 41 53 46 32 47
 37 32 50 5a 2d 32 47 31 41 32 20 20 20 32 80 2c
 41 44 50 41 46 33 59 4e 30 30 31 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ];
----

== [[dts-os]]Operating System Configuration

Operating System device tree follows standard device tree format.
For more details, refer to http://www.devicetree.org/specifications/

* https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings[Mainline Device Tree Bindings]


=== Device Tree important nodes

The device tree is split into two separate files:

The first file contains information about common blocks in the SOC as
described below:
----
/ {
	model = "Cavium ThunderX CN81XX board";
	compatible = "cavium,thunder-81xx";
	interrupt-parent = <&gic0>;
	#address-cells = <2>;
	#size-cells = <2>;

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	cpus {
		#address-cells = <2>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&CPU0>;
				};
				core1 {
					cpu = <&CPU1>;
				};
				core2 {
					cpu = <&CPU2>;
				};
				core3 {
					cpu = <&CPU3>;
				};
			};
		};

		CPU0: cpu@0 {
			device_type = "cpu";
			compatible = "cavium,thunder", "arm,armv8";
			reg = <0x0 0x000>;
			enable-method = "psci";
			/* socket 0 */
			numa-node-id = <0>;
			next-level-cache = <&thunderx_L2_0>;
		};
		CPU1: cpu@1 {
			device_type = "cpu";
			compatible = "cavium,thunder", "arm,armv8";
			reg = <0x0 0x001>;
			enable-method = "psci";
			numa-node-id = <0>;
			next-level-cache = <&thunderx_L2_0>;
		};
		CPU2: cpu@2 {
			device_type = "cpu";
			compatible = "cavium,thunder", "arm,armv8";
			reg = <0x0 0x002>;
			enable-method = "psci";
			numa-node-id = <0>;
			next-level-cache = <&thunderx_L2_0>;
		};
		CPU3: cpu@3 {
			device_type = "cpu";
			compatible = "cavium,thunder", "arm,armv8";
			reg = <0x0 0x003>;
			enable-method = "psci";
			numa-node-id = <0>;
			next-level-cache = <&thunderx_L2_0>;
		};
	};

	thunderx_L2_0: l2-cache0 {
		compatible = "cache";
		numa-node-id = <0>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <1 13 4>,
			     <1 14 4>,
			     <1 11 4>,
			     <1 10 4>;
	};

	pmu {
		compatible = "cavium,thunder-pmu", "arm,armv8-pmuv3";
		interrupts = <1 7 4>;
	};

	mmc_supply_3v3: mmc_supply_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "mmc_supply_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;

		gpio = <&gpio_6_0 8 0>;
		enable-active-high;
	};

	gic0: interrupt-controller@801000000000 {
		compatible = "arm,gic-v3";
		#interrupt-cells = <3>;
		#address-cells = <2>;
		#size-cells = <2>;
		#redistributor-regions = <1>;
		ranges;
		interrupt-controller;
		reg = <0x8010 0x00000000 0x0 0x010000>, /* GICD */
		      <0x8010 0x80000000 0x0 0x600000>; /* GICR */
		interrupts = <1 9 4>;

		its: gic-its@801000020000 {
			compatible = "arm,gic-v3-its";
			reg = <0x8010 0x20000 0x0 0x200000>;
			msi-controller;
			numa-node-id = <0>;
		};
	};

	soc@0 {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		numa-node-id = <0>;

		refclkuaa: refclkuaa {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <116640000>;
			clock-output-names = "refclkuaa";
		};

		sclk: sclk {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <800000000>;
			clock-output-names = "sclk";
		};

		uaa0: serial@87e028000000 {
			compatible = "arm,pl011", "arm,primecell";
			reg = <0x87e0 0x28000000 0x0 0x1000>;
			interrupts = <0 5 4>;
			clocks = <&refclkuaa>;
			clock-names = "apb_pclk";
			skip-init;
		};

		uaa1: serial@87e029000000 {
			compatible = "arm,pl011", "arm,primecell";
			reg = <0x87e0 0x29000000 0x0 0x1000>;
			interrupts = <0 6 4>;
			clocks = <&refclkuaa>;
			clock-names = "apb_pclk";
			skip-init;
		};

		uaa2: serial@87e02a000000 {
			compatible = "arm,pl011", "arm,primecell";
			reg = <0x87e0 0x2a000000 0x0 0x1000>;
			interrupts = <0 7 4>;
			clocks = <&refclkuaa>;
			clock-names = "apb_pclk";
			skip-init;
		};

		uaa3: serial@87e02b000000 {
			compatible = "arm,pl011", "arm,primecell";
			reg = <0x87e0 0x2b000000 0x0 0x1000>;
			interrupts = <0 8 4>;
			clocks = <&refclkuaa>;
			clock-names = "apb_pclk";
			skip-init;
		};

		watch-dog@8440000a0000 {
			compatible = "arm,sbsa-gwdt";
			reg = <0x8440 0xa0000 0x0 0x1000>, <0x8440 0xb0000 0x0 0x1000>;
			interrupts = <0 9 4>;
		};

		pbus0: nor@0 {
			compatible = "cfi-flash";
			reg = <0x8000 0x0 0x0 0x800000>;
			device-width = <1>;
			bank-width = <1>;
			clocks = <&sclk>;
		};

		smmu0@830000000000 {
			compatible = "cavium,smmu-v2";
			reg = <0x8300 0x0 0x0 0x2000000>;
			#global-interrupts = <1>;
			interrupts = <0 68 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>,
				     <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>, <0 69 4>;

			mmu-masters = <&ecam0 0x100>,
				      <&pem0  0x200>,
				      <&pem1  0x300>,
				      <&pem2  0x400>;

		};

		ecam0: pci@848000000000 {
			compatible = "pci-host-ecam-generic";
			device_type = "pci";
			msi-parent = <&its>;
			msi-map = <0 &its 0 0x10000>;
			bus-range = <0 31>;
			#size-cells = <2>;
			#address-cells = <3>;
			#stream-id-cells = <1>;
			u-boot,dm-pre-reloc;
			dma-coherent;
			reg = <0x8480 0x00000000 0 0x02000000>;	 /* Configuration space */
			ranges = <0x03000000 0x8010 0x00000000 0x8010 0x00000000 0x080 0x00000000>, /* mem ranges */
				 <0x03000000 0x8100 0x00000000 0x8100 0x00000000 0x80  0x00000000>, /* SATA */
				 <0x03000000 0x8680 0x00000000 0x8680 0x00000000 0x160 0x28000000>, /* UARTs */
				 <0x03000000 0x87e0 0x2c000000 0x87e0 0x2c000000 0x000 0x94000000>, /* PEMs */
				 <0x03000000 0x8400 0x00000000 0x8400 0x00000000 0x010 0x00000000>, /* RNM */
				 <0x03000000 0x8430 0x00000000 0x8430 0x00000000 0x02  0x00000000>, /* NIC0*/
				 <0x03000000 0x87e0 0xc6000000 0x87e0 0xc6000000 0x01f 0x3a000000>;

			mrml_bridge: mrml-bridge0@1,0 {
				compatible = "pci-bridge", "cavium,thunder-8890-mrml-bridge";
				#size-cells = <2>;
				#address-cells = <3>;
				ranges = <0x03000000 0x87e0 0x00000000 0x03000000 0x87e0 0x00000000 0x10 0x00000000>;
				reg = <0x0800 0 0 0 0>; /* DEVFN = 0x08 (1:0) */
				device_type = "pci";
				u-boot,dm-pre-reloc;

				mdio-nexus@1,3 {
					compatible = "cavium,thunder-8890-mdio-nexus";
					#address-cells = <2>;
					#size-cells = <2>;
					reg = <0x0b00 0 0 0 0>; /* DEVFN = 0x0b (1:3) */
					assigned-addresses = <0x03000000 0x87e0 0x05000000 0x0 0x800000>;
					ranges = <0x87e0 0x05000000 0x03000000 0x87e0 0x05000000 0x0 0x800000>;
					mdio0@87e005003800 {
						compatible = "cavium,thunder-8890-mdio";
						#address-cells = <1>;
						#size-cells = <0>;
						reg = <0x87e0 0x05003800 0x0 0x30>;
					};
					mdio1@87e005003880 {
						compatible = "cavium,thunder-8890-mdio";
						#address-cells = <1>;
						#size-cells = <0>;
						reg = <0x87e0 0x05003880 0x0 0x30>;
					};
				};

				mmc_1_4: mmc@1,4 {
					compatible = "cavium,thunder-8890-mmc";
					reg = <0x0c00 0 0 0 0>;	/* DEVFN = 0x0c (1:4) */
					#address-cells = <1>;
					#size-cells = <0>;
					clocks = <&sclk>;
				};

				i2c_9_0: i2c@9,0 {
					#address-cells = <1>;
					#size-cells = <0>;
					compatible = "cavium,thunder-8890-twsi";
					reg = <0x4800 0 0 0 0>; /*  DEVFN = 0x48 (9:0) */
					clock-frequency = <100000>;
					clocks = <&sclk>;
					u-boot,dm-pre-reloc;
				};

				i2c_9_1: i2c@9,1 {
					#address-cells = <1>;
					#size-cells = <0>;
					compatible = "cavium,thunder-8890-twsi";
					reg = <0x4900 0 0 0 0>; /*  DEVFN = 0x49 (9:1) */
					clock-frequency = <100000>;
					clocks = <&sclk>;
					u-boot,dm-pre-reloc;
				};

				rgx0 {
					#address-cells = <1>;
					#size-cells = <0>;
					compatible = "cavium,thunder-8890-bgx";
					reg = <0x9000 0 0 0 0>; /* DEVFN = 0x90 (16:1) */
				};
				bgx0 {
					#address-cells = <1>;
					#size-cells = <0>;
					compatible = "cavium,thunder-8890-bgx";
					reg = <0x8000 0 0 0 0>; /* DEVFN = 0x80 (16:0) */
				};
				bgx1 {
					#address-cells = <1>;
					#size-cells = <0>;
					compatible = "cavium,thunder-8890-bgx";
					reg = <0x8100 0 0 0 0>; /* DEVFN = 0x81 (16:1) */
				};
			};

			spi_7_0: spi@7,0 {
				compatible = "cavium,thunder-8190-spi";
				reg = <0x3800 0x0 0x0 0x0 0x0>; /*  DEVFN = 0x38 (7:0) */
				#address-cells = <1>;
				#size-cells = <0>;
				clocks = <&sclk>;
			};

			gpio_6_0: gpio0@6,0 {
				#gpio-cells = <2>;
				compatible = "cavium,thunder-8890-gpio";
				gpio-controller;
				reg = <0x3000 0 0 0 0>; /*  DEVFN = 0x30 (6:0) */
				u-boot,dm-pre-reloc;
			};

			nfc: nand@b,0 {
				#address-cells = <1>;
				#size-cells = <0>;
				compatible = "cavium,cn8130-nand";
				reg = <0x5800 0 0 0 0>; /* DEVFN = 0x58 (b:0) */
				clocks = <&sclk>;
			};
		};

		pem0: pci@87e0c0000000 {

			/* "cavium,pci-host-thunder-pem" implies that
			 the first bus in bus-range has config access
			 via the "PEM space", subsequent buses have
			 config assess via the "Configuration space".
			 The "mem64 PEM" range is used to map the PEM
			 BAR0, which is used by the AER and PME MSI-X
			 sources. UEFI and Linux must assign the same
			 bus number to each device, otherwise Linux
			 enumeration gets confused.  Because UEFI
			 skips the PEM bus and its PCIe-RC bridge it
			 uses a numbering that starts 1 bus higher.
			 */

			compatible = "cavium,pci-host-thunder-pem";
			device_type = "pci";
			msi-parent = <&its>;
			msi-map = <0 &its 0 0x10000>;
			bus-range = <0x1f 0x57>;
			#size-cells = <2>;
			#address-cells = <3>;
			#stream-id-cells = <1>;
			dma-coherent;
			reg = <0x8800 0x1f000000 0x0 0x39000000>,  /* Configuration space */
				<0x87e0 0xc0000000 0x0 0x01000000>; /* PEM space */
			ranges = <0x01000000 0x00 0x00000000 0x8830 0x00000000 0x00 0x00010000>, /* I/O */
				 <0x03000000 0x00 0x10000000 0x8810 0x10000000 0x0f 0xf0000000>, /* mem64 */
				 <0x43000000 0x10 0x00000000 0x8820 0x00000000 0x10 0x00000000>, /* mem64-pref */
				 <0x03000000 0x87e0 0xc0000000 0x87e0 0xc0000000 0x00 0x01000000>; /* mem64 PEM */

			#interrupt-cells = <1>;
			interrupt-map-mask = <0 0 0 7>;
			interrupt-map = <0 0 0 1 &gic0 0 0 0 16 4>, /* INTA */
					<0 0 0 2 &gic0 0 0 0 17 4>, /* INTB */
					<0 0 0 3 &gic0 0 0 0 18 4>, /* INTC */
					<0 0 0 4 &gic0 0 0 0 19 4>; /* INTD */
		};

		pem1: pci@87e0c1000000 {
			compatible = "cavium,pci-host-thunder-pem";
			device_type = "pci";
			msi-parent = <&its>;
			msi-map = <0 &its 0 0x10000>;
			bus-range = <0x57 0x8f>;
			#size-cells = <2>;
			#address-cells = <3>;
			#stream-id-cells = <1>;
			dma-coherent;
			reg = <0x8840 0x57000000 0x0 0x39000000>,  /* Configuration space */
				<0x87e0 0xc1000000 0x0 0x01000000>; /* PEM space */
			ranges = <0x01000000 0x00 0x00010000 0x8870 0x00010000 0x00 0x00010000>, /* I/O */
				 <0x03000000 0x00 0x10000000 0x8850 0x10000000 0x0f 0xf0000000>, /* mem64 */
				 <0x43000000 0x10 0x00000000 0x8860 0x00000000 0x10 0x00000000>, /* mem64-pref */
				 <0x03000000 0x87e0 0xc1000000 0x87e0 0xc1000000 0x00 0x01000000>; /* mem64 PEM */

			#interrupt-cells = <1>;
			interrupt-map-mask = <0 0 0 7>;
			interrupt-map = <0 0 0 1 &gic0 0 0 0 20 4>, /* INTA */
					<0 0 0 2 &gic0 0 0 0 21 4>, /* INTB */
					<0 0 0 3 &gic0 0 0 0 22 4>, /* INTC */
					<0 0 0 4 &gic0 0 0 0 23 4>; /* INTD */
		};

		pem2: pci@87e0c2000000 {
			compatible = "cavium,pci-host-thunder-pem";
			device_type = "pci";
			msi-parent = <&its>;
			msi-map = <0 &its 0 0x10000>;
			bus-range = <0x8f 0xc7>;
			#size-cells = <2>;
			#address-cells = <3>;
			#stream-id-cells = <1>;
			dma-coherent;
			reg = <0x8880 0x8f000000 0x0 0x39000000>,  /* Configuration space */
				<0x87e0 0xc2000000 0x0 0x01000000>; /* PEM space */
			ranges = <0x01000000 0x00 0x00020000 0x88b0 0x00020000 0x00 0x00010000>, /* I/O */
				 <0x03000000 0x00 0x10000000 0x8890 0x10000000 0x0f 0xf0000000>, /* mem64 */
				 <0x43000000 0x10 0x00000000 0x88a0 0x00000000 0x10 0x00000000>, /* mem64-pref */
				 <0x03000000 0x87e0 0xc2000000 0x87e0 0xc2000000 0x00 0x01000000>; /* mem64 PEM */

			#interrupt-cells = <1>;
			interrupt-map-mask = <0 0 0 7>;
			interrupt-map = <0 0 0 1 &gic0 0 0 0 24 4>, /* INTA */
					<0 0 0 2 &gic0 0 0 0 25 4>, /* INTB */
					<0 0 0 3 &gic0 0 0 0 26 4>, /* INTC */
					<0 0 0 4 &gic0 0 0 0 27 4>; /* INTD */
		};

		tdm: tdm@d,0 {
			#address-cells = <1>;
			#size-cells = <0>;
			compatible = "cavium,thunder-8190-tdm";
			reg = <0x6800 0 0 0>; /*  DEVFN = 0x68 (d:0) */
			clocks = <&sclk>;
		};
	};

	aliases {
		serial0 = &uaa0;
		serial1 = &uaa1;
		serial2 = &uaa2;
		serial3 = &uaa3;
		i2c0 = &i2c_9_0;
		i2c1 = &i2c_9_1;
		spi0 = &spi_7_0;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};


	memory@0 {
		device_type = "memory";
		reg = <0x0 0x01400000 0x0 0x7EC00000>;
		/* socket 0 */
		numa-node-id = <0>;
	};
};
----

The second file contains board-specific GPIO, BGX, MDIO, MMC, and SPI device
information. This information is unique per board as described below:
----
/dts-v1/;

/include/ "cn81xx-linux.dtsi"

&mrml_bridge {
	mdio-nexus@1,3 {
		mdio0@87e005003800 {
			rgmii00: rgmii00 {
				reg = <3> ;
				compatible = "micrel,ksz9031", "ethernet-phy-ieee802.3-c22";
			};
		};

		mdio1@87e005003880 {
			sgmii00: sgmii00 {
				qlm-mode = "0x000,sgmii";
				reg = <0> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				/* LED[2,1]: Speed, LED[3]: RX, LED[0]: TX, all open-drain */
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			sgmii01: sgmii01 {
				qlm-mode = "0x001,sgmii";
				reg = <1> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
				};
			sgmii02: sgmii02 {
				qlm-mode = "0x002,sgmii";
				reg = <2> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			sgmii03: sgmii03 {
				qlm-mode = "0x003,sgmii";
				reg = <3> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			xfi00: xfi00 {
				qlm-mode = "0x000,xfi","0x000,xfi-10g-kr";
				reg = <0> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi01: xfi01 {
				qlm-mode = "0x001,xfi","0x001,xfi-10g-kr";
				reg = <1> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi02: xfi02 {
				qlm-mode = "0x002,xfi","0x002,xfi-10g-kr";
				reg = <2> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi03: xfi03 {
				qlm-mode = "0x003,xfi","0x003,xfi-10g-kr";
				reg = <3> ;
				compatible = "cortina,cs4223-slice";
			};
			xlaui00: xlaui00 {
				qlm-mode = "0x000,xlaui","0x000,xlaui-40g-kr";
				reg = <0> ;
				compatible = "cortina,cs4223-slice";
			};
			xaui00: xaui00 {
				qlm-mode = "0x000,xaui";
				reg = <0> ;
				compatible = "broadcom,bcm8706", "ethernet-phy-ieee802.3-c45";
				broadcom,c45-reg-init = <1 0xc808 0xff8f 0x70>;
			};
			rxaui00: rxaui00 {
				qlm-mode = "0x000,rxaui";
				reg = <0> ;
				compatible = "marvell,88x3120", "ethernet-phy-ieee802.3-c45";
			};
			rxaui01: rxaui01 {
				qlm-mode = "0x001,rxaui";
				reg = <1> ;
				compatible = "marvell,88x3120", "ethernet-phy-ieee802.3-c45";
			};
			qsgmii00: qsgmii00 {
				qlm-mode = "0x000,qsgmii";
				reg = <0> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
			qsgmii01: qsgmii01 {
				qlm-mode = "0x001,qsgmii";
				reg = <1> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
				};
			qsgmii02: qsgmii02 {
				qlm-mode = "0x002,qsgmii";
				reg = <2> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
			qsgmii03: qsgmii03 {
				qlm-mode = "0x003,qsgmii";
				reg = <3> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};

			sgmii10: sgmii10 {
				qlm-mode = "0x010,sgmii";
				reg = <8> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			sgmii11: sgmii11 {
				qlm-mode = "0x011,sgmii";
				reg = <9> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			sgmii12: sgmii12 {
				qlm-mode = "0x012,sgmii";
				reg = <10> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			sgmii13: sgmii13 {
				qlm-mode = "0x013,sgmii";
				reg = <11> ;
				compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
				marvell,reg-init = <3 0x10 0 0x8665>,
						   <3 0x11 0 0x00aa>,
						   <3 0x12 0 0x4105>,
						   <3 0x13 0 0x8a08>;
			};
			xfi10: xfi10 {
				qlm-mode = "0x010,xfi","0x010,xfi-10g-kr";
				reg = <8> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi11: xfi11 {
				qlm-mode = "0x011,xfi","0x011,xfi-10g-kr";
				reg = <9> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi12: xfi12 {
				qlm-mode = "0x012,xfi","0x012,xfi-10g-kr";
				reg = <10> ;
				compatible = "cortina,cs4223-slice";
			};
			xfi13: xfi13 {
				qlm-mode = "0x013,xfi","0x013,xfi-10g-kr";
				reg = <11> ;
				compatible = "cortina,cs4223-slice";
			};
			xlaui10: xlaui10 {
				qlm-mode = "0x010,xlaui","0x010,xlaui-40g-kr";
				reg = <8> ;
				compatible = "cortina,cs4223-slice";
			};
			xaui10: xaui10 {
				qlm-mode = "0x010,xaui";
				reg = <8> ;
				compatible = "broadcom,bcm8706", "ethernet-phy-ieee802.3-c45";
				broadcom,c45-reg-init = <1 0xc808 0xff8f 0x70>;
			};
			rxaui10: rxaui10 {
				qlm-mode = "0x010,rxaui";
				reg = <8> ;
				compatible = "marvell,88x3120", "ethernet-phy-ieee802.3-c45";
			};
			rxaui11: rxaui11 {
				qlm-mode = "0x011,rxaui";
				reg = <9> ;
				compatible = "marvell,88x3120", "ethernet-phy-ieee802.3-c45";
			};
			qsgmii10: qsgmii10 {
				qlm-mode = "0x010,qsgmii";
				reg = <8> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
			qsgmii11: qsgmii11 {
				qlm-mode = "0x011,qsgmii";
				reg = <9> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
			qsgmii12: qsgmii12 {
				qlm-mode = "0x012,qsgmii";
				reg = <10> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
			qsgmii13: qsgmii13 {
				qlm-mode = "0x013,qsgmii";
				reg = <11> ;
				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
			};
		};
	};

	rgx0 {
		rgmii00 {
			reg = <3>;
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&rgmii00>;
		};
	};

	bgx0 {
		/* typename+qlm+typenumber eg :
		   sgmii+bgx0+sgmmi0
		*/
		   // SGMII
		sgmii00 {
			reg = <0>;
			qlm-mode = "0x000,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii00>;
		};
		sgmii01 {
			reg = <1>;
			qlm-mode = "0x001,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii01>;
		};
		sgmii02 {
			reg = <2>;
			qlm-mode = "0x002,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii02>;
		};
		sgmii03 {
			reg = <3>;
			qlm-mode = "0x003,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii03>;
		};
		xfi00 {
			reg = <0>;
			qlm-mode = "0x000,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi00>;
		};
		xfi01 {
			reg = <1>;
			qlm-mode = "0x001,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi01>;
		};
		xfi02 {
			reg = <2>;
			qlm-mode = "0x002,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi02>;
		};
		xfi03 {
			reg = <3>;
			qlm-mode = "0x003,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi03>;
		};
		// 10g-kr
		xfi-10g-kr00 {
			reg = <0>;
			qlm-mode = "0x000,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi00>;
		};
		xfi-10g-kr01 {
			reg = <1>;
			qlm-mode = "0x001,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi01>;
		};
		xfi-10g-kr02 {
			reg = <2>;
			qlm-mode = "0x002,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi02>;
		};
		xfi-10g-kr03 {
			reg = <3>;
			qlm-mode = "0x003,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi03>;
		};
		xlaui00 {
			reg = <0>;
			qlm-mode = "0x000,xlaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xlaui00>;
		};
		xlaui-40g-kr00 {
			reg = <0>;
			qlm-mode = "0x000,xlaui-40g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xlaui00>;
		};
		xaui00 {
			reg = <0>;
			qlm-mode = "0x000,xaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xaui00>;
		};
		rxaui00 {
			reg = <0>;
			qlm-mode = "0x000,rxaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&rxaui00>;
		};
		rxaui01 {
			reg = <1>;
			qlm-mode = "0x001,rxaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&rxaui01>;
		};
		qsgmii00 {
			reg = <0>;
			qlm-mode = "0x000,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii00>;
		};
		qsgmii01 {
			reg = <1>;
			qlm-mode = "0x001,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii01>;
		};
		qsgmii02 {
			reg = <2>;
			qlm-mode = "0x002,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii02>;
		};
		qsgmii03 {
			reg = <3>;
			qlm-mode = "0x003,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii03>;
		};
	};
	bgx1 {
		sgmii10 {
			reg = <0>;
			qlm-mode = "0x010,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii10>; /*"sgmmi"+bgx+no */
		};
		sgmii11 {
			reg = <1>;
			qlm-mode = "0x011,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii11>;
		};
		sgmii12 {
			reg = <2>;
			qlm-mode = "0x012,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii12>;
		};
		sgmii13 {
			reg = <3>;
			qlm-mode = "0x013,sgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&sgmii13>;
		};
		xfi10 {
			reg = <0>;
			qlm-mode = "0x010,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi10>;
		};
		xfi11 {
			reg = <1>;
			qlm-mode = "0x011,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi11>;
		};
		xfi12 {
			reg = <2>;
			qlm-mode = "0x012,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi12>;
		};
		xfi13 {
			reg = <3>;
			qlm-mode = "0x013,xfi";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi13>;
		};
		// 10g_kr
		xfi-10g-kr10 {
			reg = <0>;
			qlm-mode = "0x010,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi10>;
		};
		xfi-10g-kr11 {
			reg = <1>;
			qlm-mode = "0x011,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi11>;
		};
		xfi-10g-kr12 {
			reg = <2>;
			qlm-mode = "0x012,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi12>;
		};
		xfi-10g-kr13 {
			reg = <3>;
			qlm-mode = "0x013,xfi-10g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xfi13>;
		};
		xlaui10 {
			reg = <0>;
			qlm-mode = "0x010,xlaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xlaui10>;
		};
		xlaui-40g-kr-10 {
			reg = <0>;
			qlm-mode = "0x010,xlaui-40g-kr";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xlaui10>;
		};
		xaui10 {
			reg = <0>;
			qlm-mode = "0x010,xaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&xaui10>;
		};
		rxaui10 {
			reg = <8>;
			qlm-mode = "0x010,rxaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&rxaui10>;
		};
		rxaui11 {
			reg = <9>;
			qlm-mode = "0x011,rxaui";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&rxaui11>;
		};
		qsgmii10 {
			reg = <0>;
			qlm-mode = "0x010,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii10>;
		};
		qsgmii11 {
			reg = <1>;
			qlm-mode = "0x011,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii11>;
		};
		qsgmii12 {
			reg = <2>;
			qlm-mode = "0x012,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii12>;
		};
		qsgmii13 {
			reg = <3>;
			qlm-mode = "0x013,qsgmii";
			local-mac-address = [00 00 00 00 00 00];
			phy-handle = <&qsgmii13>;
		};
	};
};

&mmc_1_4 {
	mmc-slot@0 {
		compatible = "mmc-slot";
		reg = <0>;
		vmmc-supply = <&mmc_supply_3v3>;
		max-frequency = <26000000>;
		mmc-ddr-3_3v;
		/* 1.8v is not supported */
		no-1-8-v;
		/* Bus width is only 8 bits maximum */
		bus-width = <8>;
		/* Write-protect */
		wp-gpios = <&gpio_6_0 26 0>;
		/* Card detect */
		cd-gpios = <&gpio_6_0 27 1>;

		/* SD UHS SDR25 is supported */
		sd-uhs-sdr25;
		/* High-speed mode is supported */
		cap-sd-highspeed;
		cap-mmc-highspeed;
	};
	mmc-slot@1 {
		compatible = "mmc-slot";
		reg = <1>;
		vmmc-supply = <&mmc_supply_3v3>;
		max-frequency = <26000000>;
		mmc-ddr-3_3v;
		/* 1.8v is not supported */
		no-1-8-v;
		/* Bus width is only 8 bits maximum */
		bus-width = <8>;
		/* Write-protect */
		wp-gpios = <&gpio_6_0 24 0>;
		/* Card detect */
		cd-gpios = <&gpio_6_0 25 1>;
		/* SD UHS SDR25 is supported */
		sd-uhs-sdr25;
		/* High-speed mode is supported */
		cap-sd-highspeed;
		cap-mmc-highspeed;
	};
};

&i2c_9_0 {
	rtc@68 {
		compatible = "dallas,ds1337";
		reg = <0x68>;
		rtcmodel = <1>;
	};
	gpio1: cpld@6c {
		compatible = "gpio-i2c", "cavium,cpld8104";
		gpio-controller;
		reg = <0x6c>;
		ngpios = <160>; // 8bits for each reg 0..0x13
		#gpio-cells = <2>;
	};
};

&spi_7_0 {
         flash@0 {
		compatible = "jedec,spi-nor", "spi-flash";
		reg = <0x0>;
		spi-max-frequency = <16000000>;
		#address-cells = <1>;
		#size-cells = <1>;
	};
	slic0@2 {
		compatible = "silabs,si32260", "linux,spidev";
		reg = <2>;
		spi-max-frequency = <2500000>;
		reset-gpios = <&gpio1 74 1>;
		irq-gpios = <&gpio_6_0 3>;
		tx = <&tdm 0>;
		rx = <&tdm 1>;
	};
	slic1@3 {
		compatible = "silabs,si32260", "linux,spidev";
		reg = <3>;
		spi-max-frequency = <2500000>;
		reset-gpios = <&gpio1 75 1>;
		irq-gpios = <&gpio_6_0 5>;
		tx = <&tdm 2>;
		rx = <&tdm 3>;
	};
};
----

The example device tree can be used as a basis for THUNDER/X and OCTEON
TX based customer boards.  The dts file is built by the device tree
compiler and loaded to board.  Some of the nodes and properties are
fixed for silicon and some vary based on the boards.

In the example device tree file, initial fields contain the silicon
model and the interrupt controller used.  cpus contain the core info.

SoC::

soc@0 refers to the system on chip properties.  All other cn81xx
parameters are stored within this node.

PCI::

ecam0 refers to the PCI Enhanced Configuration Access Mechanism which
helps PCI driver to discover PCI devices.  For more details,refer to
https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/pci/host-generic-pci.txt

For details on pem node, refer to
https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/pci/pci-thunder-pem.txt

PHY configuration::

PHYs are added under MDIO node(SMI/MDIO interface is used to communicate
with PHY devices.  Below are the device tree properties for PHY

----
        sgmii00: sgmii00 {
                 qlm-mode = "0x000,sgmii";
                 reg = <0> ;
                 compatible = "marvell,88e1240", "ethernet-phy-ieee802.3-c22";
                 marvell,reg-init = <3 0x10 0 0x8665>,
                                    <3 0x11 0 0x00aa>,
                                    <3 0x12 0 0x4105>,
                                    <3 0x13 0 0x8a08>;
        };
----

qlm-mode::

This property is used run time to trim the device tree based on the
interfaces configured on the board

reg:: MDIO address of PHY
compatible:: Manufacturer and model of PHY
marvell, reg-init:: List of operations to perform to initialize a PHY device

Example operating system device tree source files are part of the THUNDERX SDK.

=== Fixups Performed During Boot

To simplify maintenance of operating system device trees, the firmware
will perform the following transforms on the device tree.  This allows
the device tree to contain configuration for many setups / boards, and
to be dynamically pruned based on the current system.

1) Remove CPU clusters and L2 caches for nodes not in the system.
----
        /cpus/cpu-map/cluster#
        /cpus/l2-cache#
        /cpus/cpu-map/cluster#/core#
        /cpus/cpu@#
----
2) Remove unused SOCs for multi-node systems.
----
        /interrupt-controller@801000000000/gic-its@#
        /soc@#
        /memory@#
----
3) Remove unused PCIe interfaces (PEMs).
----
        /soc@#/pci@#
----
4) Update SMMU mmu-masters for removed PCIe.

5) Remove node entries marked with unused qlm-mode entries.

6) Update local-mac-address properties for manufacturing data.

7) Update the uart reference clocks
----
        /soc@#/refclkuaa
                clock-frequency
----
8) Update the SCLK reference clocks.
----
        /soc@#/sclk
                clock-frequency
----
9) Rename cavium,pci-host-thunder-pem to pci-host-thunder-pem for chips that do not require Cavium ECAM errata workarounds.

10) Patch memory size for installed memory.

11) Remove /distance-map if the the system is single node.

== [[dts-board]]Per Board Changeable Configuration

Some parameters from <<dts-init,Common Board Initialization and Configuration>> are
changeable on a running system.  This supports minor tweaks to the
configuration based on the current system usage.  These parameters
are tweaked through the setup menu, available in the *Boot Options*
menu.  Settings changed through this path create a device tree
*default.dtb* stored in the flash FAT file system.  These settings are
considered temporary overrides, lost either during firmware update or
through a factory reset.

== Firmware Update

Firmware updates in the field cause the following changes in the four
device tree configuration files.

* <<dts-manuf,Per Board Manufacturing Information>> is preserved. No changes are made.
* <<dts-init,Common Board Initialization and Configuration>> is replaced with the new data in the firmware update.
* <<dts-os,Operating System Configuration>> is replaced with the new data in the firmware update.
* <<dts-board,Per Board Changeable Configuration>> is deleted, losing any customization.

== Walkthrough of initial board boot

=== Misconfigured warning messages

==== Missing Device Tree

  ********************************************************
  * Board manufacturing information not found.  Program
  * the board manufacturing information in the Setup menu.
  ********************************************************

The device tree describing the board manufacturing data was missing.  It
is suppose to be at 0xff0000 in flash.  The user must enter the
manufacturing data again in the setup menu. See <<dts-manuf,Per Board Manufacturing Information>>.

==== Mismatched Board Name

  ********************************************************
  * Board configuration file not found. Either the board
  * model is incorrect, or factory settings are not
  * available. DTB file not found for board "XXX".
  ********************************************************

The board name specified in the manufacturing information did not match a
device tree file name.  This means the board manufacturing data was
entered wrong, or a device tree for this board was not included in the
flash image.  Either fix the board name, or add the correct device tree to
flash. See <<dts-init,Common Board Initialization and Configuration>>.

==== Operating System Configuration Not Found

 ********************************************************
 * Operating system device tree not found. Operating
 * system may not boot properly. DTB file not found for
 * board "EBB8800".
 ********************************************************

The <<dts-os,Operating System Configuration>> was not found.  The files
BOARD-REV-linux.dtb, BOARD-linux.dtb, and generic-linux.dtb do not exist
or are corrupt.

=== Combining of the Four Device Trees

During boot, the four different device tree files are combined into one
unified view.  The following step are performed.

. <<dts-manuf,Per Board Manufacturing Information>> is loaded from offset 0xff0000 in flash.
. Either BOARD-REVISION.dtb or BOARD.dtb is loaded. This contains <<dts-init,Common Board Initialization and Configuration>>.
. The <<dts-manuf,Per Board Manufacturing Information>> is merged into the dtb file loaded above. This creates the BDK device tree.
. Either BOARD-REVISION-linux.dtb, BOARD-linux.dtb, or generic-linux.dtb is loaded. This contains <<dts-os,Operating System Configuration>>.
. The BDK device tree is merged into the linux dtb file loaded above.
. The device tree fixups detailed in [[#Fixups Performed During Boot]] are applied to the dtb.
. The final dtb is passed to the system software.

== Cavium Board Names

Details for Cavium boards:

* "EBB8800"	  : Revision "G-01", as silkscreened on the board.
* "EBB8804"	  : Revision "G-01", as silkscreened on the board.
* "EBB8604"	  : Revision "G-01", as silkscreened on the board.
* "CRB-1s" 	  : Revisions "0.1", "0.2", "0.3" as silkscreened on the board.
* "CRB-2s" 	  : Revisions "EVT2", "EVT3", "EVT4".  Not marked on boards.
* "EBB8304"       : Revision G-01, as silkscreened on the board
* "EBB8104"	  : Revision G-01, as silkscreened on the board
* "SFF8104"	  : Revision G-01, as silkscreened on the board
* "NAS8104" 	  : Revision G-01, as silkscreened on the board
* "RBD8030"	  : Revision G-01, as silkscreened on the board
* "SFF8304"	  : Revision G-01, as silkscreened on the board
* "XPLIANT-CN83XX": Revision G-01, as silkscreened on the board

Note that board revision is especially important for the CRB-2S, as the
DDR4 reference clock changed in the EVT4 revision.

